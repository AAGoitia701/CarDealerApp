@using CarDealerApp.Data;
@model List<Car>


<div>
    <h1>Car List</h1>
    <a asp-controller="Car" asp-action="Create"  class="btn-primary">New Car</a>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Licence Plate</th>
            <th>Brand</th>
            <th>Model</th>
            <th>Color</th>
            <th>Year</th>
            <th>Owner</th>
        </tr>
    </thead>
    <tbody>
         @foreach(var car in Model)
            {
        <tr>     
            <td>@car.LicencePlate</td>
            <td>@car.Brand</td>
            <td>@car.Model</td>
            <td>@car.Color</td>
            <td>@car.DateTime.Year</td>
            @if (!string.IsNullOrEmpty(car.Owner))
            {
                <td>@car.Owner</td>
            }else{
                <td>No Owner</td>
            }
            <td><a asp-controller="Car" asp-action="Edit" asp-route-id="@car.CarId">Edit</a></td>

            <td><a href="javascript:void(0)" onclick="confirmDelete('@Url.Action("Delete", "Car", new {id = car.CarId})')">Delete</a></td>
                
        </tr>
        }
    </tbody>

</table>

<script>
    function confirmDelete(url) {
        var confirmed = confirm("Are you sure you want to delete this?");
        if (confirmed) {
            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-CSRF-TOKEN': '@Html.AntiForgeryToken()' 
                }
            }
            ).then(response => {
                if (response.ok) {
                    window.location.reload(); // Reload page after deleting
                } else {
                    alert('Error on delete');
                }
            }).catch(error => {
                console.error('Error:', error);
                alert('Error in request');
            });
        }
    }
</script>




